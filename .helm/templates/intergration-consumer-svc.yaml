apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Chart.Name }}"
  labels:
    service: "{{ .Chart.Name }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      service: "{{ .Chart.Name }}"
  template:
    metadata:
      labels:
        service: "{{ .Chart.Name }}"
    spec:
      containers:
      - name: "{{ .Chart.Name }}"
{{ tuple "consumer-%%%CI_PIPELINE_ID%%%" . | werf_container_image | indent 8 }}
        env:
{{ tuple "consumer-%%%CI_PIPELINE_ID%%%" . | werf_container_env | indent 8 }}
        - name: SPRING_DATASOURCE_URL
          value: "jdbc:mysql://mysql-{{.Release.Namespace}}.share-{{.Release.Namespace}}.svc.cluster.local:3306/tingg"
        - name: SPRING_DATASOURCE_USERNAME
          value: "tingg"
        - name: SPRING_DATASOURCE_PASSWORD
          value: "tingg"
        - name: SPRING_PROFILES_ACTIVE
          value: "worker"
        - name: SPRING_RABBITMQ_HOST
          value: "rmq-{{.Release.Namespace}}-rabbitmq.share-{{.Release.Namespace}}.svc.cluster.local"
        - name: SPRING_RABBITMQ_USERNAME
          value: "user"
        - name: SPRING_RABBITMQ_PASSWORD
          valueFrom:
            secretKeyRef:
              key: rabbitmq-password
              name: rmq-{{.Release.Namespace}}-rabbitmq
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: AWS_ACCESS_KEY_ID
              name: aws-prod-keys
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: AWS_SECRET_ACCESS_KEY
              name: aws-prod-keys
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: "{{ .Chart.Name }}"
#   labels:
#     chart: "{{ .Chart.Name }}"
# spec:
#   type: ClusterIP
#   selector:
#     service: "{{ .Chart.Name }}"
#   ports:
#   - name: http
#     port: 8080
#     targetPort: 8080
#     protocol: TCP
