apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Chart.Name }}"
  labels:
    service: "{{ .Chart.Name }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      service: "{{ .Chart.Name }}"
  template:
    metadata:
      labels:
        service: "{{ .Chart.Name }}"
    spec:
      containers:
      - name: "{{ .Chart.Name }}"
{{ tuple "config-%%%CI_PIPELINE_ID%%%" . | werf_container_image | indent 8 }}
        env:
{{ tuple "config-%%%CI_PIPELINE_ID%%%" . | werf_container_env | indent 8 }}
        - name: DATABASE_URL
          value: "postgresql://postgres:joU2FxKxuO@pg-testing-postgresql.share-testing.svc.cluster.local/confdb"
        - name: SECRET_KEY
          value: "%)i)j3#96ad(t%5kk7zb1n__lt-gj=^c*0(1sd1=7wgx_n)vos"
        - name: ESHOST
          value: "elastic-testing-elasticsearch-client.share-testing.svc"
        - name: ESPORT
          value: "9200"
        - name: DEBUG
          value: 0
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Chart.Name }}
  annotations:
    getambassador.io/config: |
      ---
      apiVersion: ambassador/v1
      kind:  Mapping
      name: "{{ .Chart.Name }}-{{.Release.Namespace}}"
      prefix: /
      service: "{{ .Chart.Name }}.{{.Release.Namespace}}:8080"
      host: "{{ .Chart.Name }}-{{.Release.Namespace}}.cellulant.co.ke"
spec:
  type: NodePort
  selector:
    service: {{ .Chart.Name }}
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP